# ██████╗████████╗ █████╗ ██████╗ ████████╗  ██████╗ ██████╗ ██╗███╗  ██╗████████╗
#██╔════╝╚══██╔══╝██╔══██╗██╔══██╗╚══██╔══╝  ██╔══██╗██╔══██╗██║████╗ ██║╚══██╔══╝
#╚█████╗    ██║   ███████║██████╔╝   ██║     ██████╔╝██████╔╝██║██╔██╗██║   ██║   
# ╚═══██╗   ██║   ██╔══██║██╔══██╗   ██║     ██╔═══╝ ██╔══██╗██║██║╚████║   ██║   
#██████╔╝   ██║   ██║  ██║██║  ██║   ██║     ██║     ██║  ██║██║██║ ╚███║   ██║   
#╚═════╝    ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝   ╚═╝     ╚═╝     ╚═╝  ╚═╝╚═╝╚═╝  ╚══╝   ╚═╝ 
[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    #Seta temperatura do extrusor e aguarda
    RESPOND MSG="Aguardando aquecimento do bico"
    M109 S{EXTRUDER_TEMP}
    
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    #Colocar aqui código de limpesa do bico
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    #Executa nivelamento da mesa 
    BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}
    # Log inicial com o valor atual da variável
    RESPOND MSG="[MMU BYPASS CHECK] Verificando tool atual: {printer.mmu.tool}"
    {% if printer.mmu.tool == -1 or printer.mmu.tool == -2 %}
        # Tool é -1 ou -2, executa movimento direto
        RESPOND MSG="[MMU BYPASS CHECK] Tool é {printer.mmu.tool} Usando porta de Bypass - Executando movimento direto G1 X0 Y2.50 Z0.78 F2400"
        G1 X0 Y2.50 Z0.78 F2400
        RESPOND MSG="[MMU BYPASS CHECK] Movimento direto concluído"
        MMU_TEST_CONFIG enable_clog_detection=0
        RESPOND MSG="[MMU BYPASS CHECK] Desativando detecão de obstrução"
    {% else %}
        # Tool não é -1 nem -2, executa macro PURGA_PREUNLOAD
        RESPOND MSG="[MMU BYPASS CHECK] Tool é {printer.mmu.tool} - Impressão sem Bypass"
    {% endif %}
    
    RESPOND MSG="[MMU BYPASS CHECK] Verificação de BYPASS  finalizada"

   

#███████╗███╗  ██╗██████╗   ██████╗ ██████╗ ██╗███╗  ██╗████████╗
#██╔════╝████╗ ██║██╔══██╗  ██╔══██╗██╔══██╗██║████╗ ██║╚══██╔══╝
#█████╗  ██╔██╗██║██║  ██║  ██████╔╝██████╔╝██║██╔██╗██║   ██║   
#██╔══╝  ██║╚████║██║  ██║  ██╔═══╝ ██╔══██╗██║██║╚████║   ██║   
#███████╗██║ ╚███║██████╔╝  ██║     ██║  ██║██║██║ ╚███║   ██║   
#╚══════╝╚═╝  ╚══╝╚═════╝   ╚═╝     ╚═╝  ╚═╝╚═╝╚═╝  ╚══╝   ╚═╝  
[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G1 X0 Y0


    # Disable steppers
    M84

#██╗      █████╗  █████╗ ██████╗   ███████╗██╗██╗      █████╗ ███╗   ███╗███████╗███╗  ██╗████████╗
#██║     ██╔══██╗██╔══██╗██╔══██╗  ██╔════╝██║██║     ██╔══██╗████╗ ████║██╔════╝████╗ ██║╚══██╔══╝
#██║     ██║  ██║███████║██║  ██║  █████╗  ██║██║     ███████║██╔████╔██║█████╗  ██╔██╗██║   ██║   
#██║     ██║  ██║██╔══██║██║  ██║  ██╔══╝  ██║██║     ██╔══██║██║╚██╔╝██║██╔══╝  ██║╚████║   ██║   
#███████╗╚█████╔╝██║  ██║██████╔╝  ██║     ██║███████╗██║  ██║██║ ╚═╝ ██║███████╗██║ ╚███║   ██║   
#╚══════╝ ╚════╝ ╚═╝  ╚═╝╚═════╝   ╚═╝     ╚═╝╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝╚══════╝╚═╝  ╚══╝   ╚═╝  
[gcode_macro LOAD_FILAMENT]
gcode:
    MMU_LOAD

#██╗   ██╗███╗  ██╗██╗      █████╗  █████╗ ██████╗   ███████╗██╗██╗      █████╗ ███╗   ███╗███████╗███╗  ██╗████████╗
#██║   ██║████╗ ██║██║     ██╔══██╗██╔══██╗██╔══██╗  ██╔════╝██║██║     ██╔══██╗████╗ ████║██╔════╝████╗ ██║╚══██╔══╝
#██║   ██║██╔██╗██║██║     ██║  ██║███████║██║  ██║  █████╗  ██║██║     ███████║██╔████╔██║█████╗  ██╔██╗██║   ██║   
#██║   ██║██║╚████║██║     ██║  ██║██╔══██║██║  ██║  ██╔══╝  ██║██║     ██╔══██║██║╚██╔╝██║██╔══╝  ██║╚████║   ██║   
#╚██████╔╝██║ ╚███║███████╗╚█████╔╝██║  ██║██████╔╝  ██║     ██║███████╗██║  ██║██║ ╚═╝ ██║███████╗██║ ╚███║   ██║   
# ╚═════╝ ╚═╝  ╚══╝╚══════╝ ╚════╝ ╚═╝  ╚═╝╚═════╝   ╚═╝     ╚═╝╚══════╝╚═╝  ╚═╝╚═╝     ╚═╝╚══════╝╚═╝  ╚══╝   ╚═╝ 
[gcode_macro UNLOAD_FILAMENT]
gcode:
    MMU_UNLOAD

#██████╗ ██╗   ██╗██████╗  ██████╗ ███████╗
#██╔══██╗██║   ██║██╔══██╗██╔════╝ ██╔════╝
#██████╔╝██║   ██║██████╔╝██║  ██╗ █████╗  
#██╔═══╝ ██║   ██║██╔══██╗██║  ╚██╗██╔══╝  
#██║     ╚██████╔╝██║  ██║╚██████╔╝███████╗
#╚═╝      ╚═════╝ ╚═╝  ╚═╝ ╚═════╝ ╚══════╝

[gcode_macro PURGA_MECANICA]
# ==========================================================
# MACRO: PURGA_MECANICA
# ==========================================================
# Descrição: Purga mecânica com servo/balde integrado e escova,
#            com ciclos curtos, wipe final e opção de retração.
#            Suporte a primeira purga com volume diferenciado.
#
# PARÂMETROS OPCIONAIS (passados via console):
# ----------------------------------------------------------
# VOLUME=<valor>          -> Volume de filamento a purgar em mm³
# TESTE=<0|1|2>           -> Modo de teste:
#                              0 = purga normal (extrusão + servo)
#                              1 = só movimentos (sem extrusão, sem servo)
#                              2 = movimentos + servo (sem extrusão)
# DEBUG=<0|1>             -> Imprime cálculos e posições no console
# RETRACT=<valor>         -> Retração em mm após purga (0 = sem retração)
#
# VARIÁVEIS IMPORTANTES:
# ----------------------------------------------------------
# variable_bucket_x / variable_bucket_y  -> Centro do balde para purga
# variable_brush_x / variable_brush_y    -> Centro da escova para limpeza
# variable_purge_z                        -> Altura mínima segura da mesa (Z)
# variable_purge_feed                     -> Velocidade de extrusão (mm/min)
# variable_filament_diameter              -> Diâmetro do filamento (mm)
# variable_purge_cycles                   -> Número de ciclos curtos de extrusão
# variable_brush_strokes                  -> Número de movimentos de limpeza na escova
# variable_brush_amplitude                -> Largura do movimento da escova (mm)
# variable_wipe_offset                     -> Deslocamento final para wipe (X+)
# variable_safe_x / variable_safe_y       -> Posição segura do cabeçote antes de recolher
# variable_servo_name                      -> Nome do servo configurado no [servo]
# variable_servo_extend / variable_servo_retract -> Ângulos de abertura e fechamento do servo
# variable_retract_after_purge             -> Retração em mm após purga (0 = sem retração)
# variable_first_purge_volume              -> Volume específico para a primeira purga (mm³)
#
# EXEMPLOS DE USO:
# ----------------------------------------------------------
# PURGA_MECANICA VOLUME=120
#      → Purga normal com 120 mm³
#
# PURGA_MECANICA VOLUME=120 TESTE=1
#      → Apenas movimentos (sem extrusão e sem servo)
#
# PURGA_MECANICA VOLUME=120 TESTE=2 DEBUG=1
#      → Movimentos + servo, sem extrusão, com debug ativo
#
# PURGA_MECANICA VOLUME=120 RETRACT=2 DEBUG=1
#      → Purga normal com retração de 2 mm e debug ativo
# ==========================================================
description: "Purga mecânica com servo/escova integrada, ciclos curtos no balde, wipe final e opção de retração"
gcode:
    # Parâmetros de entrada
    {% set manual_volume = params.VOLUME|default(0)|float %}
    {% set teste_mode = params.TESTE|default(0)|int %}
    {% set debug = params.DEBUG|default(0)|int %}
    {% set manual_retract = params.RETRACT|default(-1)|float %}
    
    # ===== CONFIGURAÇÕES DA MACRO =====
    # (Edite estes valores para personalizar)
    {% set bucket_x = 122 %}                    # Centro X do balde
    {% set bucket_y = 340 %}                    # Centro Y do balde
    {% set bucket_spread = 25 %}                # Largura de distribuição no balde (mm)
    {% set brush_x = 122 %}                     # Centro X da escova
    {% set brush_y = 322 %}                     # Centro Y da escova
    {% set purge_z = 19 %}                      # Altura mínima Z
    {% set purge_feed = 450 %}                  # Velocidade de extrusão
    {% set filament_diameter = 1.75 %}          # Diâmetro do filamento
    {% set purge_cycles = 5 %}                  # Número de ciclos
    {% set default_retract = 12 %}              # Retração padrão
    {% set servo_name = "purge_servo" %}        # Nome do servo
    {% set servo_extend = 12 %}                 # Ângulo de abertura
    {% set servo_retract = 130 %}               # Ângulo de fechamento
    {% set brush_strokes = 2 %}                 # Movimentos na escova
    {% set brush_amplitude = 10 %}              # Largura do movimento
    {% set wipe_offset = 15 %}                  # Deslocamento final
    {% set safe_x = 150 %}                      # Posição segura X
    {% set safe_y = 150 %}                      # Posição segura Y
    {% set first_purge_volume = 450 %}          # Volume para primeira purga (mm³)
    # =====================================
    
    # Usar valor manual de retração se fornecido
    {% set retract_after_purge = manual_retract if manual_retract >= 0 else default_retract %}
    
    # Obter número de trocas de ferramenta
    {% set num_toolchanges = printer.mmu.num_toolchanges|default(0)|int %}
    
    # Determinar volume de purga
    {% if manual_volume > 0 %}
        {% set purge_volume = manual_volume %}
        {% set volume_source = "manual" %}
    {% elif num_toolchanges == 0 %}
        {% set purge_volume = first_purge_volume %}
        {% set volume_source = "primeira_purga" %}
    {% else %}
        {% set purge_volume = printer.mmu.toolchange_purge_volume %}
        {% set volume_source = "normal" %}
    {% endif %}

    {% set filament_area = 3.1416 * (filament_diameter/2)**2 %}
    {% set purge_length = purge_volume / filament_area %}
    {% set cycle_length = (purge_length / purge_cycles) if purge_cycles|int > 0 else 0 %}

    # Mensagem informativa sobre o número de trocas de ferramenta
    {% if num_toolchanges <= 1 and volume_source == "primeira_purga" %}
        RESPOND TYPE=command MSG="*** PRIMEIRA PURGA *** - Trocas: {num_toolchanges} | Volume: {purge_volume|round(1)} mm³"
    {% endif %}

    RESPOND TYPE=command MSG="Purga: {purge_volume|round(1)} mm³ ({purge_length|round(1)} mm) | TESTE={teste_mode} | DEBUG={debug} | Fonte: {volume_source}"
    {% if debug %}
      RESPOND TYPE=command MSG="Trocas de ferramenta: {num_toolchanges}"
      RESPOND TYPE=command MSG="Centro balde: X{bucket_x} Y{bucket_y}"
      RESPOND TYPE=command MSG="Centro escova: X{brush_x} Y{brush_y}"
      RESPOND TYPE=command MSG="Ciclos: {purge_cycles} | Por ciclo: {cycle_length|round(2)} mm"
      RESPOND TYPE=command MSG="Retração após purga: {retract_after_purge} mm"
    {% endif %}

    SAVE_GCODE_STATE NAME=PURGA_MECANICA_STATE

    {% set current_z = printer.toolhead.position.z %}
    {% if current_z < purge_z %}
      G90
      G1 Z{purge_z} F3000
    {% endif %}

    # --- ABRE BANDEJA (pula se TESTE=1) ---
    {% if teste_mode != 1 %}
      SET_SERVO SERVO={servo_name} ANGLE={servo_extend}
      G4 P500
    {% endif %}

    # --- PURGA NO BALDE ---
    G90
    MMU_SYNC_GEAR_MOTOR SYNC=1
    G1 X{bucket_x} Y{bucket_y} F7800
    {% if debug %} RESPOND TYPE=command MSG="Na posição do balde" {% endif %}

    {% if teste_mode == 0 %}
      G91
      {% for i in range(purge_cycles|int) %}
        # Calcular posição X para distribuir filamento (de -spread/2 a +spread/2)
        {% set x_offset = (bucket_spread / (purge_cycles - 1)) * i - (bucket_spread / 2) if purge_cycles > 1 else 0 %}
        {% set target_x = bucket_x + x_offset %}
        
        # Mover para nova posição X antes de extruir
        G90
        G1 X{target_x} F7800
        {% if debug %} RESPOND TYPE=command MSG="Ciclo {i+1}: X{target_x|round(1)}" {% endif %}
        
        # Extruir nesta posição
        G91
        G1 E{cycle_length|round(2)} F{purge_feed}
        G4 P200
      {% endfor %}
      G90
      
      # Voltar ao centro do balde para retração
      #G1 X{bucket_x} F7800
      
      {% if retract_after_purge|float > 0 %}
        G91
        G1 E-{retract_after_purge|float} F2400
        G90
        {% if debug %} RESPOND TYPE=command MSG="Retração de {retract_after_purge} mm aplicada" {% endif %}
      {% endif %}
    {% endif %}

    # --- LIMPEZA NA ESCOVA ---
    G90
    G1 X{brush_x} Y{brush_y} F6000
    {% if debug %} RESPOND TYPE=command MSG="Na posição da escova" {% endif %}

    {% for i in range(brush_strokes|int) %}
      G91
      G1 X{brush_amplitude} F3000
      G1 X-{2*brush_amplitude} F3000
      G1 X{brush_amplitude} F3000
      G90
    {% endfor %}

    # --- WIPE FINAL ---
    G90
    G1 X{brush_x + brush_amplitude} Y{brush_y} F3000
    G1 X{brush_x + brush_amplitude + wipe_offset} F3000

    # --- SAFE POSITION ---
    G1 X{safe_x} Y{safe_y} F7800

    # --- RECOLHE BANDEJA (pula se TESTE=1) ---
    {% if teste_mode != 1 %}
      SET_SERVO SERVO={servo_name} ANGLE={servo_retract}
      G4 P500
    {% endif %}

    RESTORE_GCODE_STATE NAME=PURGA_MECANICA_STATE